{"version":3,"sources":["components/Button/Button.module.css","components/TaskCounter/TaskCounter.module.css","components/TaskForm/TaskForm.module.css","components/TaskList/TaskList.module.css","components/Layout/Layout.module.css","components/StatusFilter/StatusFilter.module.css","components/AppBar/AppBar.module.css","components/Layout/Layout.js","components/Button/Button.js","redux/constants.js","redux/selectors.js","components/StatusFilter/StatusFilter.js","components/TaskCounter/TaskCounter.js","components/AppBar/AppBar.js","components/TaskForm/TaskForm.js","components/Task/Task.js","components/TaskList/TaskList.js","components/App.js","redux/store.js","index.js","components/Task/Task.module.css"],"names":["module","exports","Layout","children","className","css","container","Button","selected","type","otherProps","clsx","btn","isSelected","statusFilters","Object","freeze","all","active","completed","getTasks","state","tasks","getStatusFilter","filters","status","StatusFilter","filter","useSelector","wrapper","TaskCounter","count","reduce","acc","task","text","AppBar","section","title","TaskForm","form","onSubmit","event","preventDefault","target","reset","field","name","placeholder","Task","checkbox","checked","size","TaskList","visibleTasks","statusFilter","getVisibleTasks","list","map","listItem","id","App","initialState","enhancer","devToolsEnhancer","store","createStore","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.99dc8a55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\",\"isSelected\":\"Button_isSelected__2JVMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TaskCounter_text__3WbH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__1kzwH\",\"field\":\"TaskForm_field__8trCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__2xVr5\",\"listItem\":\"TaskList_listItem__XeAAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1nNA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StatusFilter_wrapper__1VEdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppBar_wrapper__21lfN\",\"section\":\"AppBar_section__3Iy4s\",\"title\":\"AppBar_title__JfHv9\"};","import css from \"./Layout.module.css\";\n\nexport const Layout = ({ children }) => {\n  return <main className={css.container}>{children}</main>;\n};\n","import clsx from \"clsx\";\nimport css from \"./Button.module.css\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","export const statusFilters = Object.freeze({\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n});\n","export const getTasks = state => state.tasks;\n\nexport const getStatusFilter = state => state.filters.status;\n","import { Button } from 'components/Button/Button';\nimport css from './StatusFilter.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { statusFilters } from 'redux/constants';\nimport { getStatusFilter } from 'redux/selectors';\n\nexport const StatusFilter = () => {\n  const filter = useSelector(getStatusFilter);\n\n  return (\n    <div className={css.wrapper}>\n      <Button selected={filter === statusFilters.all}>All</Button>\n      <Button selected={filter === statusFilters.active}>Active</Button>\n      <Button selected={filter === statusFilters.completed}>Completed</Button>\n    </div>\n  );\n};\n","import css from './TaskCounter.module.css';\nimport { useSelector } from 'react-redux';\nimport { getTasks } from 'redux/selectors';\n\nexport const TaskCounter = () => {\n  const tasks = useSelector(getTasks);\n\n  const count = tasks.reduce(\n    (acc, task) => {\n      if (task.completed) {\n        acc.completed += 1;\n      } else {\n        acc.active += 1;\n      }\n      return acc;\n    },\n    { active: 0, completed: 0 }\n  );\n\n  return (\n    <div>\n      <p className={css.text}>Active: {count.active}</p>\n      <p className={css.text}>Completed: {count.completed}</p>\n    </div>\n  );\n};\n","import { StatusFilter } from \"components/StatusFilter/StatusFilter\";\nimport { TaskCounter } from \"components/TaskCounter/TaskCounter\";\nimport css from \"./AppBar.module.css\";\n\nexport const AppBar = () => {\n  return (\n    <header className={css.wrapper}>\n      <section className={css.section}>\n        <h2 className={css.title}>Tasks</h2>\n        <TaskCounter />\n      </section>\n      <section className={css.section}>\n        <h2 className={css.title}>Filter by status</h2>\n        <StatusFilter />\n      </section>\n    </header>\n  );\n};\n","import { Button } from \"components/Button/Button\";\nimport css from \"./TaskForm.module.css\";\n\nexport const TaskForm = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text...\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n","import { MdClose } from \"react-icons/md\";\nimport css from \"./Task.module.css\";\n\nexport const Task = ({ task }) => {\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.completed}\n      />\n      <p className={css.text}>{task.text}</p>\n      <button className={css.btn}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","import { Task } from 'components/Task/Task';\nimport css from './TaskList.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { statusFilters } from 'redux/constants';\nimport { getStatusFilter } from 'redux/selectors';\nimport { getTasks } from 'redux/selectors';\n\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n    default:\n      return tasks;\n  }\n};\n\nexport const TaskList = () => {\n  const tasks = useSelector(getTasks);\n  const statusFilter = useSelector(getStatusFilter);\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n\n  return (\n    <ul className={css.list}>\n      {visibleTasks.map(task => (\n        <li className={css.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Layout } from \"components/Layout/Layout\";\nimport { AppBar } from \"components/AppBar/AppBar\";\nimport { TaskForm } from \"components/TaskForm/TaskForm\";\nimport { TaskList } from \"components/TaskList/TaskList\";\n\nexport const App = () => {\n  return (\n    <Layout>\n      <AppBar />\n      <TaskForm />\n      <TaskList />\n    </Layout>\n  );\n};\n","import { legacy_createStore as createStore } from 'redux';\nimport { devToolsEnhancer } from '@redux-devtools/extension';\n\nconst initialState = {\n  tasks: [\n    { id: 0, text: 'Learn HTML and CSS', completed: true },\n    { id: 1, text: 'Get good at JavaScript', completed: true },\n    { id: 2, text: 'Master React', completed: false },\n    { id: 3, text: 'Discover Redux', completed: false },\n    { id: 4, text: 'Build amazing apps', completed: false },\n  ],\n  filters: {\n    status: 'all',\n  },\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return state;\n};\n\nconst enhancer = devToolsEnhancer();\n\nexport const store = createStore(rootReducer, enhancer);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__1Un4J\",\"text\":\"Task_text__7szr-\",\"btn\":\"Task_btn__2cnNo\",\"checkbox\":\"Task_checkbox__1kBaq\"};"],"sourceRoot":""}